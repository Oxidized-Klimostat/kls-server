version: "3"

services:

  postgres:
    build:
      dockerfile_inline: |
        FROM timescale/timescaledb:latest-pg16
        RUN apk add make git && \
          git clone https://github.com/michelp/pgjwt.git && \
          cd pgjwt && \
          make install
    ports:
      - 127.0.0.1:5432:5432 # only for development purposes
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - ./setup.sql:/docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "postgres", "-U", "postgres"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 1s
    secrets:
      - postgres_password
      - auth_pass
      - jwt_secret

  api:
    # https://github.com/PostgREST/postgrest/tree/main/nix/tools/docker
    # https://github.com/PostgREST/postgrest/blob/main/.github/scripts/arm/docker-env/Dockerfile
    build:
      dockerfile_inline: |
        FROM debian:bookworm AS builder
        RUN apt-get update && apt-get install -y bash-static

        FROM postgrest/postgrest
        COPY --from=builder /usr/bin/bash-static /bin/bash-static
    ports:
      - 3095:3000
    environment: # https://postgrest.org/en/stable/references/configuration.html#environment-variables
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: authenticator
      PGDATABASE: postgres
      PGRST_DB_SCHEMAS: api
      PGRST_DB_ANON_ROLE: anon
      PGRST_OPENAPI_MODE: follow-privileges # prod: disabled
    command: /bin/bash-static -c "PGPASSWORD=$(</run/secrets/auth_pass) PGRST_JWT_SECRET=$(</run/secrets/jwt_secret) /bin/postgrest"
    depends_on:
      postgres:
        condition: service_healthy
    secrets:
      - auth_pass
      - jwt_secret

secrets:
  postgres_password:
    environment: "POSTGRES_PASSWORD"
  auth_pass:
    environment: "AUTH_PASS"
  jwt_secret:
    environment: "JWT_SECRET"
